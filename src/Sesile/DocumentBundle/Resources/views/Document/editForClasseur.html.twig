<div class="row">
    <div class="col-lg-9">
        <div id="doc">
            <div id="fichiers" class="dropzone"></div>
            <br>
            <div id="filedescription" style="display:none"></div>
        </div></div>
    <div class="col-lg-3 text-right">
        <div class="dropdown">
            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Télécharger tous les fichiers <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                <li><a href="{{ path('download_doc_all_files', {'id':classeur.id}) }}">Télécharger les originaux</a></li>
                {# Si le classeur est validé seuelement on peut accéder aux options de téléchargements du visa et de la signature #}
                {% if classeur.status == 2 %}
                    <li><a href="{{ path('download_doc_visa_all_files', {'id':classeur.id}) }}" target="_blank">Télécharger visa</a></li>
                    <li {% if signature is null %}class="disabled"{% endif %}>
                        {% if signature is null %}
                            <a href="#">Télécharger signature</a>
                        {% else %}
                            <a href="{{ path('download_doc_sign_all_files', {'id':classeur.id}) }}" target="_blank">Télécharger signature</a>
                        {% endif %}
                    </li>
                    <li {% if signature is null %}class="disabled"{% endif %}>
                        {% if signature is null %}
                            <a href="#">Télécharger visa + signature</a>
                        {% else %}
                            <a href="{{ path('download_doc_all_all_files', {'id':classeur.id}) }}" target="_blank">Télécharger visa + signature</a>
                        {% endif %}

                    </li>
                {% endif %}
            </ul>
        </div>
    </div>
</div>

<script src="{{ asset('js/dropzone.js') }}"></script>
<script type="text/javascript">

var selected = null;

var selectedFile = null;

var openeddesc = false;

var currentDocHtml = null;


var launchtim = false;

var filetocheck = null;


var allowmodif = false;

var uploadingfiles = 0;

var uploadedfiles = {};


$(document)
    .ajaxStart(function () {
//                    $loading.show();
        //console.log('Ajax start');
        $('body, .dropzone .dz-preview').css('cursor', 'wait');
    })
    .ajaxStop(function () {
//                    $loading.hide();
        //console.log('Ajax stop');
        $('body').css('cursor', 'default');
        $('.dropzone .dz-preview').css('cursor', 'pointer');
    });

function tim() {
    $.ajax(Routing.generate('show_document', {id: filetocheck}), {
        method: 'POST',
        success: function (html) {

            if (html != currentDocHtml) {
                $("#filedescription").html(html);
                currentDocHtml = html;

            }

            buttonModifRoutine();

            /*if (launchtim) {
                setTimeout(function () {
                    tim()
                }, 40000);
            }*/

        }
    });
}


var docsjson = {{ types|json_encode|raw }};
var ids = {{ ids|json_encode|raw }};


var dropzone = new Dropzone("div#fichiers", {
    url: "{{ oneup_uploader_endpoint('docs') }}",
    previewTemplate: '<div   class="dz-preview dz-file-preview" ><img class="dropzonefileicon" style="width: 5em; height: 5em; " /><div class="" style="width: 130px;" ><div  class="dz-filename"><span class="dropzonereducedfilename" data-dz-name></span> </div>' +
    '<div class="dz-size" data-dz-size></div></div> <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>' +
    ' <div class="dz-success-mark"><span>✔</span></div> <div class="dz-error-mark"><span>✘</span></div>' +
    ' <div class="dz-error-message"><span data-dz-errormessage></span></div></div>',
    createThumbnail: false{% if classeur.type.id == 2 %},
    maxFiles: 1,
    dictMaxFilesExceeded: "Dans le cas d'un classeur de type Hélios le dépôt d'un seul fichier par classeur est autorisé.",
    maxFilesize: 128,
    dictFileTooBig: "Dans le cas d'un classeur de type Hélios le fichier ne peut dépasser les 128 Mo.",
    acceptedFiles: ".xml",
    dictInvalidFileType: "Attention, seuls les fichiers xml sont acceptés"
    {% endif %}
});

//dropzone.options.maxFiles = 1;
dropzone.on("maxfilesexceeded", function(file) {
    this.removeFile(file);
    alert ('Dans le cas d\'un classeur de type Hélios le dépôt d\'un seul fichier par classeur est autorisé.');
});

{% if isvalidable == false %}
    dropzone.disable();
{% endif %}
function removedropzonefile(file) {

    $("#filedescription").slideUp();
    openeddesc = false;
    currentDocHtml = null;
    launchtim = false;
    $("input[type=hidden]").each(function () {

        if ($(this).val() == selectedFile.name) {

            $(this).remove();
        } //do something with
    });

    dropzone.removeFile(selectedFile);
}


function removeFile(file) {

    $('#documentcontent').html('<img id="loadinggif" src="{{ asset("/bundles/sesilemain/img/load.gif") }}"/>');

    $.ajax(Routing.generate('delete_document', {id: file}), {
        method: 'POST',
        success: function (html) {
            loadDocuments();
        }
    });
}

function enableUploads() {
    {% if classeur.type.id == 2 %}
        //console.log('ok enable: ' + {{ classeur.type.id }});
    {% else %}
        //console.log('Nok enable : ' + {{ classeur.type.id }});
        dropzone.options.maxFiles = null;
    {% endif %}
    allowmodif = true;
    buttonModifRoutine();
}


function buttonModifRoutine() {

    if (allowmodif) {
        $('#modifbutton').show();
    }

}

dropzone.on('success', function (file, response) {
    $.each(response, function (serverfilename, originalname) {
        $('#documentcontent').append("<input type='hidden' name='" + serverfilename + "' value='" + originalname + "'> ");

        uploadedfiles[serverfilename] = originalname;

    });

});

dropzone.on('complete', function (file) {
    uploadingfiles--;
    if (uploadingfiles == 0) {

        addDocToCurrentClasseur(uploadedfiles);
        uploadedfiles = {};

    }
});

dropzone.on("addedfile", function (file) {
    // Access the preview element with file.previewElement and add event listeners, etc... to it.
    $(file.previewElement).find('img').map(function () {

        uploadingfiles++;

//        console.log('add:' + uploadingfiles);

        $.each(docsjson, function (key, value) {
            //au cas où il y ait un & dans le nom de fichier
            if (key.replace('&','&amp;') == file.name) {

                file.type = value;

                $(file.previewElement).find('.dz-progress').map(function () {
                    $(this).remove();
                });


            }
        });

        $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/BLANK/icon_blanc_256.png') }}");

        if (file.type == "application/pdf") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/PDF/icon_pdf_256.png') }}");
        }

        if (file.type == "application/msword" || file.type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/WORD/icon_doc_256.png') }}");
        }

        if (file.type == "application/zip") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/ZIP/icon_zip_256.png') }}");
        }

        if (file.type == "image/png") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/PNG/icon_png_256.png') }}");
        }

        if (file.type == "image/png") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/PNG/icon_png_256.png') }}");
        }

        if (file.type == "image/jpeg") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/JPG/icon_jpg_256.png') }}");
        }

        if (file.type == "text/xml" || file.type == "application/xml") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/XML/icon_xml_256.png') }}");
        }

        if (file.type == "application/vnd.ms-excel" || file.type == "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/XLS/icon_xls_256.png') }}");
        }

        if (file.type == "application/x-rar") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/RAR/icon_rar_256.png') }}");
        }

        if (file.type == "text/plain") {
            $(this).attr("src", "{{ asset('bundles/sesiledocument/img/ICONS/TXT/icon_txt_256.png') }}");
        }


        $(this).attr("onmouseover", "");
        $(this).unbind('mouseenter mouseleave');
    });
    $(file.previewElement).find('div').map(function () {
        $(this).attr("onmouseover", "");
        $(this).unbind('mouseenter mouseleave mouseover');
        $(this).hover(function (e) {
            e.preventDefault();
        });
    });

    $(file.previewElement).find('.dropzonereducedfilename').map(function () {
        // alert(file.name);
        if (file.name.length > 18) {
            $(this).html(file.name.substr(0, 15) + "...");
        }
    });


    $(file.previewElement).attr("onmouseover", "");
    $(file.previewElement).unbind('mouseenter mouseleave mouseover');
    $(file.previewElement).hover(function (e) {
        e.preventDefault();
    });


    //Ajout de la popover

    $(file.previewElement).click(function (e) {

        selectedFile = file;

        if (selected != null) {
            selected.removeClass('selectedfile');
        }
        selected = $(this);

//        console.log(selected);
//        console.log("id : " +  file.id);

        selected.addClass('selectedfile');

        // $('[rel=popover]').not(button).popover('hide');

//        var idfile = -1;
        var idfile = file.id;


        $.each(ids, function (key, value) {

            if (value.replace('&','&amp;') == file.name) {
//                idfile = key;
            }
        });


        if (idfile == -1) {
            idfile = file.name;
        }
console.log("id : " +  idfile);

        $.ajax(Routing.generate('show_document', {id:idfile }), {
            method: 'POST',
            success: function (html) {

                if (openeddesc) {
                    $("#filedescription").html(html);

                } else {
                    $("#filedescription").html(html).slideDown();
                }

                buttonModifRoutine();
                openeddesc = true;
                currentDocHtml = html;
                launchtim = true;

                filetocheck = idfile;

                setTimeout(function () {
                    tim()
                }, 2000);

            }

        });

    });

});


{% for file in docs %}

    var mockFile = { id:{{ file.id }}, name: "{{ names[file.id] }}", size: {{ tailles[file.id] }} };

    // Call the default addedfile event handler
    dropzone.emit("addedfile", mockFile);

    uploadingfiles--;
//    console.log("emmit:" + uploadingfiles);


//    dropzone.files.length ++;
    dropzone.options.maxFiles = dropzone.options.maxFiles - 1;
//console.log("maxFiles:" + dropzone.options.maxFiles);

{% endfor %}


$('html').click(function () {
        $("#filedescription").slideUp();
        openeddesc = false;
        currentDocHtml = null;
        launchtim = false;
    });

    $('#doc').click(function (event) {
        event.stopPropagation();

    });


enableUploads();


</script>