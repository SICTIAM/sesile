<link type="text/css" href="{{ asset("/css/select2.css") }}" rel="stylesheet"/>
<link rel="stylesheet" href="{{ asset('/css/circuit.css') }}"/>

<!--
<div class="row row-padding">
    <div class="col-lg-3 col-lg-offset-3">
        <button type="button" class="btn btn-info btn-block btn-voirInter" id="seeAllUsers">
            <span class="glyphicon glyphicon-plus-sign"></span> Déplier toutes les étapes</button>
    </div>
    <div class="col-lg-3">
        <button type="button" class="btn btn-info btn-block btn-voirInter" id="hiddeAllUsers">
            <span class="glyphicon glyphicon-minus-sign"></span> Replier toutes les étapes</button>
    </div>
</div>
-->
<div class="row" id="circuit_main">
    <div id="circuit_etapes">
        <div id="circuit_with_js">


        {# Etape déposante #}
        <div class="well etapes-circuit">
            <span class="ok_perso glyphicon glyphicon-download-alt"></span>
            <div class="text-center"><h4>Etape déposante</h4></div>
            <div class="row">
                <div class="col-lg-6 col-sm-12">
                    {% if deposant.path is empty %}
                        <img src="{{ asset('/images/imghomme.png') }}" alt="{{ deposant.Prenom }} {{ deposant.Nom }}">
                    {% else %}
                        <img src="{{ asset(upload_path ~ deposant.path) }}" alt="{{ deposant.Prenom }} {{ deposant.Nom }}">
                    {% endif %}
                </div>
                <div class="col-lg-6 col-sm-12">
                    <span class="circuit-user">{{ deposant.Prenom }}<br>{{ deposant.Nom }}</span>
                </div>
            </div>
        </div>
        {% for circuit_user in circuit_users %}
            {% if circuit_user is not empty %}
                {# Etapes validées #}
                <div class="well etapes-circuit">
                    <span class="ok_perso glyphicon glyphicon-ok"></span>
                    <div class="text-center"><h4>Etape validée</h4></div>
                    <div class="row">
                        <div class="col-lg-6">
                            {% if circuit_user.path is empty %}
                                <img src="{{ asset('/images/imghomme.png') }}" alt="{{ circuit_user.Prenom }} {{ circuit_user.Nom }}">
                            {% else %}
                                <img src="{{ asset(upload_path ~ circuit_user.path) }}" alt="{{ circuit_user.Prenom }} {{ circuit_user.Nom }}">
                            {% endif %}
                        </div>
                        <div class="col-lg-6">
                            <span class="circuit-user">{{ circuit_user.Prenom }}<br>{{ circuit_user.Nom }}</span>
                        </div>
                    </div>
                </div>
            {% endif %}
        {% endfor %}


        <div id="contetapes">

            {% if edit and classeur_status != 0 and classeur_status != 4 %}
                {# Etape en cours #}
                <div class="well etapes-circuit etape-validante">
                    <span class="valid_perso glyphicon glyphicon-pencil"></span>
                    <div class="text-center"><h4>Etape en cours</h4></div>
                    <div class="row">
                        <div class="col-lg-6">
                            {% if app.user.path is empty %}
                                <img src="{{ asset('/images/imghomme.png') }}" alt="{{ app.user.prenom }} {{ app.user.nom }}">
                            {% else %}
                                <img src="{{ asset(upload_path ~ app.user.path) }}" alt="{{ app.user.prenom }} {{ app.user.nom }}">
                            {% endif %}
                        </div>
                        <div class="col-lg-6">
                            <span class="circuit-user">{{ app.user.prenom }}<br>{{ app.user.nom }}</span>
                        </div>
                    </div>
                    <div class="col-lg-12 list-validants">
                        <ul class="select2-choices">
                            {% for validant in validants %}
                                {% if app.user != validant %}
                                    <li class="select2-search-choice">{{ validant.nom }} {{ validant.prenom }}</li>
                                {% endif %}
                            {% endfor %}
                        </ul>
                    </div>
                    <button type="button" class="btn btn-info btn-block btn-voirInter seeValidants" id="seeUsers"><span class="glyphicon glyphicon-plus-sign"></span> Voir les intervenants</button>
                    <button type="button" class="btn btn-info btn-block btn-voirInter hideValidants" id="hiddeUsers"><span class="glyphicon glyphicon-minus-sign"></span> Cacher les intervenants</button>

                </div>
            {% endif %}


            {% for etape in etapesGroupe %}

                {# Etapes restantes a valider #}
                <div class="well etapes-circuit">
                    {% if edit %}<button type="button" class="btn btn-danger btn-suppetape" id="suppetape"><span class="glyphicon glyphicon-remove"></span></button>{% endif %}
                    <div class="text-center"><h4 title="merci de renseigner au moins un utilisateur dans l'étape vide ou de la supprimer" x-moz-errormessage="merci de renseigner au moins un utilisateur dans l'étape vide ou de la supprimer">Etape à venir</h4></div>

                    {% if etape.countUserPacksUsers() > 3 %}
                        <span class="glyphicon glyphicon-user etape-groupe" title="Cliquez pour voir les utilisateurs de l'étape"></span>
                    {% endif %}

                    <select class="selusers {% if etape.countUserPacksUsers() > 3 %} etape-groupe-users{% endif %}" required="required" multiple="multiple" style="width: 100%;{% if etape.countUserPacksUsers() > 3 %} display: none;{% endif %}" data-etape="{{ etape.id }}" {% if edit != true %}disabled="disabled"{% endif %}>
                        <optgroup label="Groupes d'utilisateurs">
                            {% for userPack in userPacks %}
                                <option value="userpack-{{ userPack.id }}" {% if userPack in etape.userPacks %} selected{% endif %} data-type="groupe" title="Voir les utilisateurs du groupe">
                                    {{ userPack.nom }}
                                </option>
                            {% endfor %}
                        </optgroup>
                        <optgroup label="utilisateurs">
                            {% for user in users %}
                                <option value="user-{{ user.id }}" data-etape="{{ etape.id }}" data-type="user" {% if user in etape.users %} selected{% endif %}>{{ user.nom }} {{ user.prenom }}</option>
                            {% endfor %}
                        </optgroup>
                    </select>

                    <button type="button" class="btn btn-info btn-block btn-voirInter" id="seeUsers"><span class="glyphicon glyphicon-plus-sign"></span> Voir les intervenants</button>
                    <button type="button" class="btn btn-info btn-block btn-voirInter" id="hiddeUsers"><span class="glyphicon glyphicon-minus-sign"></span> Cacher les intervenants</button>

                </div>
            {% endfor %}

            {# Bouton ajouter une étape #}
            {% if edit %}
                <input type="hidden" name="valeurs" id="valeurs">
                <div class="text-center div-btn-ajout-etape">
                    <button type="button" class="btn btn-circle-lg btn-info first" id="addetape"><span class="glyphicon glyphicon-plus"></span> </button>
                </div>
            {% endif %}
        </div>

        </div>
    </div>
</div>

<div class="top_selects_circuits" id="circuitvalidation">
    <span id="useradd_btn" class="glyphicon glyphicon-chevron-up" {% if edit is defined %} style="display: none" {% endif %}></span>

    <div class="titre_select" {% if edit is defined %} style="display: none" {% endif %}>
        <label class="nametitle" id="users_complete">
            <span class="glyphicon glyphicon-search"></span>
            &nbsp;&nbsp;Utilisateurs&nbsp;&nbsp;</label>
        <input class="nameinput" type="text">
    </div>

    <div id="users_list" {% if edit is defined %} style="display: none" {% endif %}>
        {% for user in users %}
            <p data-id="{{ user.id }}" data-img="{{ user.path }}">
                {{ user.prenom }} {{ user.nom }}
            </p>
        {% endfor %}
    </div>
</div>

<script type="application/javascript" src="{{ asset("/js/select2.min.js") }}"></script>

<script type="text/javascript" src="{{ asset('/js/jquery.mousewheel.min.js') }}"></script>
<script type="text/javascript" src="{{ asset('/js/circuit_etape.js') }}"></script>
<script>
    $(document).ready(function() {

        // Fonction permettant de determinier si le scroll est présent sur un élément
        // Returns { vertical: true/false, horizontal: true/false }
        $.fn.hasScrollBar = function() {
            var e = this.get(0);
            return {
                vertical: e.scrollHeight > e.clientHeight,
                horizontal: e.scrollWidth > e.clientWidth
            };

        };

//        $(".selusers").select2();
        /*
         * Initialisations
         */

        aff_button_valider();
        scrollFrisque();

        // Fonction permettant d agrandir la frise dynamiquement.
        function scrollFrisque () {
            var widthLine = $('#circuit_main').css('width');
            $('#circuit_etapes').css('width', widthLine);
            {% if edit %}
                var btn = 143;
            {% else %}
                var btn = 0;
            {% endif %}
            // 42 c est la solution... et la taille de la flèche
            var widthScroll = $('.etapes-circuit').length * 292 + btn;
            $('#circuit_with_js').css('width', widthScroll);
        }

        // Sans bootstrap c'est la galère. Faut se gérer le rediementsionnement de la fenêtre à la mano...
        window.onresize = function(event) {
            scrollFrisque();
            scrollActive();
        };

        // Pour le bouton de suppression de l etape
        $(document).on('click','#suppetape',function() {
            $(this).parent().remove();
            creerFleches();
            scrollFrisque();
            aff_button_valider();
            scrollActive();
        });


        // Fonction creer une fleche pour le sens de lecture
        function creerFleches() {
            $(".fleche_circuit").remove();
            $("<span/>").addClass("fleche_circuit glyphicon glyphicon-chevron-right").insertAfter(".etapes-circuit:not(:last)");
        }

        $('.etape-groupe').on('click', function() {
            $(this).siblings('.selusers').css('display', 'block');
            $(this).siblings('#seeUsers').show();
            $(this).hide();
        });

        // pour les validants courant
        $(document).on('click', '.seeValidants', function() {
            $('.list-validants').show();
        });
        $(document).on('click', '.hideValidants', function() {
            $('.list-validants').hide();
        });


        /*
        * Surcharge des boutons cacher et voir tous les utilisateurs par rapport au commun
        * */
        // Evenement du bouton voir tous les utilisateurs
        $(document).on('click','#seeAllUsers',function(event) {
            $('.list-validants').show();
        });

        // Pour cacher tous les utilisateurs
        $(document).on('click','#hiddeAllUsers',function() {
            $('.list-validants').hide();
        });
        /*
         * Fin de la surcharge
        */

        // Ajouter une nouvelle étape
        $(document).on('click','#addetape',function(){
            /*
             A chaque fois qu'on clique sur le bouton bleu une nouvelle etape de validation se crée
             */
            $('.first').popover('destroy');
            $('.dyn').popover('destroy');
            $(this).parent().remove();
            $('.popover').remove();

            $('#contetapes').append('' +
            '<div class="well etapes-circuit"><div class="text-center"><h4 title="merci de renseigner au moins un utilisateur dans l\'étape vide ou de la supprimer" x-moz-errormessage="merci de renseigner au moins un utilisateur dans l\'étape vide ou de la supprimer">Etape à venir</h4></div><select class="selusers" required="required" title="merci de renseigner au moins un utilisateur dans l\'étape vide ou de la supprimer" x-moz-errormessage="merci de renseigner au moins un utilisateur dans l\'étape vide ou de la supprimer" multiple="multiple" style="width: 100%" data-etape="0"><optgroup label="Groupes d\'utilisateurs">{% for userPack in userPacks %}<option value="userpack-{{ userPack.id }}" data-type="groupe">{{ userPack.nom }}</option>{% endfor %}</optgroup><optgroup label="utilisateurs">{% for user in users %}<option value="user-{{ user.id }}" data-type="user">{{ user.nom }} {{ user.prenom }}</option>{% endfor %}</optgroup></select><button type="button" class="btn btn-danger btn-suppetape" id="suppetape"><span class="glyphicon glyphicon-remove"></span></button><button type="button" class="btn btn-info btn-block btn-voirInter" id="seeUsers"><span class="glyphicon glyphicon-plus-sign"></span> Voir les intervenants</button><button type="button" class="btn btn-info btn-block btn-voirInter" id="hiddeUsers" style="display:none;"><span class="glyphicon glyphicon-minus-sign"></span> Cacher les intervenants</button></div>' +
            '<div class="text-center div-btn-ajout-etape"><button type="button" class="btn btn-circle-lg btn-info dyn" id="addetape"><span class="glyphicon glyphicon-plus"></span></button></div>');
            $('.dyn').popover('destroy');
            $('.dyn').popover({
                trigger: 'hover',
                container: 'body',
                content: 'Ajouter une étape',
                placement: 'bottom'
            });

            function formatState (state) {

                if (!state.id) { return state.text; }
                var tabType = state.id.split('-');

                if(tabType[0] == 'user')
                {
                    return '<span><span class="glyphicon glyphicon-user"></span>&nbsp;&nbsp;'+ state.text+'</span>';
                }
                else{
                    return '<span data-toggle="popover" style="display: block" data-id="'+tabType[1]+'"><i class="fa fa-group"></i>&nbsp;&nbsp;'+ state.text+'</span>';
                }

            }


            $("select.selusers").select2({
                formatResult: formatState,
                formatSelection:formatState

            });



            initPopover();
            $(".selusers").on("select2-selecting", function () {
                $('[data-toggle="popover"]').popover('destroy');
                initPopover();

              //  alert('select')
            });

            $(".selusers").on("select2-removing", function () {
                $('[data-toggle="popover"]').popover('destroy');
                initPopover();

              //  alert('select')
            });
            $(".selusers").on("select2-close", function () {
                //alert('close')
                initPopover();

            });
            $(".selusers").on("select2-open", function () {
                initPopover();

            });
            creerFleches();
            scrollFrisque();
            // Pour savoir si on valide ou si on signe
            aff_button_valider();

            scrollActive();


        });

        /*
         * Fonction permettant de recuperer les utilisateurs et les groupes pour l'envoie
         * La fonction recupère toutes les informations des selects et les stringify pour les passer dans un champs hidden
         */
        var tabGeneral = [];
        $(".btn-valider, .btn-valider-non-signer, .btn-valider-signer").on('click',function(){
            /*
             * Pour chaque etape de validation créé on récupère les options sélectionnées
             *
             * */
            $('select.selusers').each(function(){

                var Etapes = {};
                Etapes.etape_id = $(this).data('etape');
                Etapes.etapes = [];

                if($(this).val())
                {
                    $(this).find(':selected').each(function(){
                        /*
                         * Pour chaque option selectionnée, on récupère son data-type(groupe ou user) et sa value (id du user ou du userPack)
                         * */
                        Etapes.etapes.push({
                            entite: $(this).data('type'),
                            id: $(this).val()
                        });
                    });
                } else {
                    var moncul = $(this).parent().find('h4');
                    $(this).parent().find('h4').tooltip({placement:'bottom'});
                    $(this).parent().find('h4').tooltip('show');

                    setTimeout(function(){moncul.tooltip('hide');},3000);

                    e.preventDefault();

                }
                tabGeneral.push(Etapes);
            });
            //e.preventDefault();
            /*
             * on met tout ça dans un tableau que l'on stringifie et qu'on met dans le hidden
             * */
            $('#valeurs').val(JSON.stringify(tabGeneral));
//                tabGeneral = [];
        });

        {% if edit %}
                $( "#contetapes:not(.etape-validante)" ).sortable({
                    items :'> div:not(.etape-validante, .div-btn-ajout-etape)',
                    tolerance: "pointer",
                    stop: function (e, ui) {
                        creerFleches();
                    }
                }).disableSelection();
        {% endif %}

        // Fonction pour afficher les bouton valider et signer ou cacher les boutons selon le nb etapes restantes
        function aff_button_valider () {
            //var c = document.getElementById("#contetapes").childNodes.length;
            var classeur_type = {{ classeur_type }};
            {% if edit and classeur_status != 0 and classeur_status != 4 %}
                var nbEtapes = $('#contetapes').children('.etapes-circuit').length;
            {% else %}
                var nbEtapes = $('#contetapes').children('.etapes-circuit').length + 1;
            {% endif %}
            //console.log('nbEtapes : ' + nbEtapes);
            //if(valid_sign == 0) {
            if(nbEtapes <= 1) {
                $(".btn-valider-signer").css('display', 'inline-block');
                $(".btn-valider-signer-pdf").css('display', 'inline-block');
                $(".btn-group-valider-signer").css('display', 'inline-block');
                if (classeur_type == 2) {
                    $(".btn-valider-non-signer").css('display', 'none');
                } else {
                    $(".btn-valider-non-signer").css('display', 'inline-block');
                }
            } else {
                $(".btn-valider-signer").css('display', 'none');
                $(".btn-valider-signer-pdf").css('display', 'none');
                $(".btn-group-valider-signer").css('display', 'none');
                $(".btn-valider-non-signer").css('display', 'inline-block');
            }
        }


        // Pour le scroll à la molette de la souris
        // Si le scroll est présent on active le scroll horizontal de la souris
        function scrollActive() {

            if ($('#circuit_etapes').hasScrollBar().horizontal) {
                $("#circuit_etapes").mousewheel(function(event, delta) {
                    this.scrollLeft -= (delta * 100);
                    event.preventDefault();
                });
            }
            else {
                $("#circuit_etapes").unmousewheel();
            }
        }
        scrollActive();

        //$('#circuit_etapes').scrollLeft = 10
        // $('#circuit_etapes').scrollLeft(0);
        // $("#circuit_etapes").scrollWidth($("#circuit_etapes").scrollLeft())
    });

</script>
