{% extends "SesileMainBundle:Default:index.html.twig" %}

{% block content %}
    <div class="bloc_page">
        <div class="titre_page">
            <span class="glyphicon glyphicon-folder-open"></span>
            &nbsp;&nbsp;&nbsp;Editer un utilisateur
        </div>

        {{ form_start(edit_form) }}


        <div class="label_form label-form-input">
            {{ form_label(edit_form.username) }}
            {{ form_widget(edit_form.username, { 'attr':{'disabled':'disabled'} }) }}
        </div>

        <br/>

        {% for passwordField in edit_form.plainPassword %}
            <div class="label_form label-form-input">
                {% if loop.index  != 1 %}
                    {{ form_label(passwordField, 'Confirmation') }}
                {% else %}
                    {{ form_label(passwordField, 'Mot de passe') }}
                {% endif %}
                {{ form_widget(passwordField) }}
            </div>
            <br/>
        {% endfor %}


        <div class="label_form label-form-input">
            {{ form_label(edit_form.Nom) }}
            {{ form_widget(edit_form.Nom) }}
        </div>

        <br/>

        <div class="label_form label-form-input">
            {{ form_label(edit_form.Prenom) }}
            {{ form_widget(edit_form.Prenom) }}
        </div>

        <br/>

        <div class="label_form label-form-input">
            {{ form_label(edit_form.ville) }}
            {{ form_widget(edit_form.ville) }}
        </div>
        <br/>

        <div class="label_form label-form-input">
            {{ form_label(edit_form.cp) }}
            {{ form_widget(edit_form.cp) }}
        </div>
        <br/>

        <div class="label_form label-form-input">
            {{ form_label(edit_form.departement) }}
            {{ form_widget(edit_form.departement) }}
        </div>
        <br/>

        <div class="label_form label-form-input">
            {{ form_label(edit_form.pays) }}
            {{ form_widget(edit_form.pays) }}
        </div>
        <br/>

        {#<div class="label_form label-form-input">
            {{ form_label(edit_form.role) }}
            {{ form_widget(edit_form.role) }}
        </div>
        <br/>#}

        <div class="row">
            <div class="col-lg-6">
                {{ form_widget(edit_form.userRole) }}
            </div>
        </div>

        <div class="label_form label-form-input">
            {{ form_label(edit_form.qualite) }}
            {{ form_widget(edit_form.qualite, {'attr': {'wrap': 'hard'}}) }}
        </div>
        <br/>

        <div class="label_form parcou row">

            <div class="col-md-4">
                {{ form_label(edit_form.file) }}
            </div>
            <div class="col-md-8">
                <div class="row">
                    {{ form_widget(edit_form.file, {'attr': { 'class' : 'upload_image', 'placeholder': ''} } ) }}
                </div>
                <div class="row">
                    {% if entity.path is defined and entity.path is not null %}
                        <img class="col-md-4 col-md-push-4" src="{{ asset(upload_path ~ entity.path) }}"/>
                    {% else %}
                        <img class="col-md-4 col-md-push-4" src="{{ asset('/images/imghomme.png') }}"/>
                    {% endif %}
                </div>
            </div>
        </div>

        <br>

        <div class="label_form parcouSignature row">

            <div class="col-md-4">
                {{ form_label(edit_form.fileSignature) }}
            </div>
            <div class="col-md-8">
                <div class="row">
                    {{ form_widget(edit_form.fileSignature, {'attr': { 'class' : 'upload_image', 'placeholder': ''} } ) }}
                </div>
                <div class="row">
                    {% if entity.pathSignature is defined and entity.pathSignature is not null %}
                        <img class="col-md-6 col-md-push-3" src="{{ asset(upload_path_signatures ~ entity.pathSignature) }}"/>
                    {% endif %}
                </div>
            </div>
        </div>

        <br/>

        <div class="label_form pickuser">
            {{ form_label(edit_form.roles, 'Rôles') }}
            {{ form_widget(edit_form.roles) }}
        </div>
        <br/>
        {% if is_granted('ROLE_SUPER_ADMIN') %}
            <div class="label_form pickuser">
                {{ form_label(edit_form.collectivite, 'Collectivités') }}
                {{ form_widget(edit_form.collectivite) }}
            </div>
        {% endif %}
        <br/>

        <div class="acti">
            <label for="{{ edit_form.enabled.vars.id }}" class="cb-enable selected">
                <span>Activé</span>
            </label>
            <label for="{{ edit_form.enabled.vars.id }}" class="cb-disable">
                <span>Désactivé</span>
            </label>
            {{ form_widget(edit_form.enabled, {'attr': {'class': 'checkbox' }}) }}
        </div>
        <br/>
        <br/>
        <br/>
        <div class="row">
            <div class="col-lg-2">Accès aux API :</div>
            <div class="col-lg-2">{{ form_widget(edit_form.apiactivated, {'attr': {'class': 'checkbox' }}) }}</div>
        </div>


        <br/>

        <div id="apitokensecret" style="display:none">
            <div class="label_form_token label-form-input">
                {{ form_label(edit_form.apitoken) }}
                {{ form_widget(edit_form.apitoken) }}
            </div>
            <div class="label_form_token label-form-input">
                {{ form_label(edit_form.apisecret) }}
                {{ form_widget(edit_form.apisecret) }}
            </div>
            <br/>
        </div>
        <br/>


        <br/>

        <div class="row">
            <div class="col-lg-2">
                {{ form_widget(edit_form.submit, {'attr': {'class': 'btn btn-success' }}) }}
                {{ form_end(edit_form) }}
            </div>
            <div class="col-lg-3">
                <a class="btn btn-primary navbar-btn" href="{{ path('liste_users') }}">
                    <span class="glyphicon glyphicon-share-alt"></span>
                    Retour aux utilisateurs
                </a>
            </div>

        </div>


        <br/>

    </div>

    <script src="{{ asset("/js/bootstrap-filestyle.min.js") }}" type="text/javascript"></script>
    <script type="text/javascript">

        $(document).ready(function() {
            // Personnalisation de l input file
            $(":file").filestyle({/*input: false, */buttonBefore: true, size: "sm", buttonText: "&nbsp;Télécharger une image", badge: false});


            // Fonction permettant l ajout et la suppression de role multiple
            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container = $('div#sesile_userbundle_user_userRole');

            // On ajoute un lien pour ajouter une nouvelle catégorie
            var $addLink = $('<div class="row"><div class="col-md-3 col-md-push-7 text-center"> <a href="#" id="add_category" class="btn btn-circle-md btn-info first"><span class="glyphicon glyphicon-plus"></span></a> </div></div> <div class="row">&nbsp;</div>');

//            $container.prepend($addLink);
            $container.append($addLink);


            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $addLink.click(function(e) {
                addCategory($container);
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index = $container.find(':input').length / 2;
            //console.log('inex : ' + index);

            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
            if (index == 0) {
                addCategory($container);
            } else {
                // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
                $container.children('div:not(.row)').each(function() {
                    addDeleteLink($(this));
                });
            }

            // La fonction qui ajoute un formulaire Categorie
            function addCategory($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Rôle n°' + (index+1))
                        .replace(/__name__/g, index));

                // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                addDeleteLink($prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);

                // On modifie la valeur du select pour correspondre a l utilisateur courant
                $("select#sesile_userbundle_user_userRole_" + index + "_user").val("{{ entity.id }}");
                //$("select#sesile_userbundle_user_userRole_" + index + "_user").hide();

                // On ajoute le bouton d ajout de formulaire en fin
                $container.append($addLink);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index++;
            }

            // La fonction qui ajoute un lien de suppression d'un role
            function addDeleteLink($prototype) {
                // Création du lien
                $deleteLink = $('<a href="#" class="btn btn-circle-md btn-danger btn-supRoles"><span class="glyphicon glyphicon-remove"></span></a>');

                // Ajout du lien
                $prototype.append($deleteLink);

                // Ajout du listener sur le clic du lien
                $deleteLink.click(function(e) {
                    $prototype.remove();
                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }


        });

        $("#sesile_userbundle_user_apiactivated").change(function (e) {
            if ($(this).is(':checked')) {
                $('#apitokensecret').show('slow');
            } else {
                $('#apitokensecret').hide('slow');
            }
        });

        if ($("#sesile_userbundle_user_apiactivated").is(':checked')) {
            $('#apitokensecret').show('slow');
        } else {
            $('#apitokensecret').hide('slow');
        }


    </script>
{% endblock %}